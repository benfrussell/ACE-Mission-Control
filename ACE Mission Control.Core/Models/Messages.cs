// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pbdrone {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxIHcGJkcm9uZSIfCglIZWFydGJlYXQSEgoKYXJy",
            "aHl0aG1pYRgBIAEoAiKpAgoPSW50ZXJmYWNlU3RhdHVzEjcKD2ludGVyZmFj",
            "ZV9zdGF0ZRgBIAEoDjIeLnBiZHJvbmUuSW50ZXJmYWNlU3RhdHVzLlN0YXRl",
            "EjgKDGZhaWx1cmVfdHlwZRgCIAEoDjIiLnBiZHJvbmUuSW50ZXJmYWNlU3Rh",
            "dHVzLkZhaWxTdGF0ZRIWCg5mYWlsdXJlX291dHB1dBgDIAEoCSIwCgVTdGF0",
            "ZRILCgdPRkZMSU5FEAASDgoKQVRURU1QVElORxABEgoKBk9OTElORRACIlkK",
            "CUZhaWxTdGF0ZRIOCgpOT19GQUlMVVJFEAASEwoPQVRURU1QVF9GQUlMVVJF",
            "EAESEwoPRFJPUFBFRF9GQUlMVVJFEAISEgoOVEhSRUFEX0ZBSUxVUkUQAyJy",
            "CgxGbGlnaHRTdGF0dXMSMQoMZmxpZ2h0X3N0YXRlGAEgASgOMhsucGJkcm9u",
            "ZS5GbGlnaHRTdGF0dXMuU3RhdGUiLwoFU3RhdGUSCwoHU1RPUFBFRBAAEg0K",
            "CU9OX0dST1VORBABEgoKBklOX0FJUhACImwKDUNvbnRyb2xEZXZpY2USNQoO",
            "Y29udHJvbF9kZXZpY2UYASABKA4yHS5wYmRyb25lLkNvbnRyb2xEZXZpY2Uu",
            "RGV2aWNlIiQKBkRldmljZRIGCgJSQxAAEggKBE1TREsQARIICgRPU0RLEAIi",
            "VQoIUG9zaXRpb24SEQoJbG9uZ2l0dWRlGAEgASgCEhAKCGxhdGl0dWRlGAIg",
            "ASgCEhAKCGFsdGl0dWRlGAMgASgCEhIKCnNhdGVsbGl0ZXMYBCABKAUiIAoN",
            "RmxpZ2h0QW5vbWFseRIPCgdhbm9tYWx5GAEgAygJIi4KCEFDRUVycm9yEhEK",
            "CXRpbWVzdGFtcBgBIAEoCRIPCgdtZXNzYWdlGAIgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.Heartbeat), global::Pbdrone.Heartbeat.Parser, new[]{ "Arrhythmia" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.InterfaceStatus), global::Pbdrone.InterfaceStatus.Parser, new[]{ "InterfaceState", "FailureType", "FailureOutput" }, null, new[]{ typeof(global::Pbdrone.InterfaceStatus.Types.State), typeof(global::Pbdrone.InterfaceStatus.Types.FailState) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.FlightStatus), global::Pbdrone.FlightStatus.Parser, new[]{ "FlightState" }, null, new[]{ typeof(global::Pbdrone.FlightStatus.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.ControlDevice), global::Pbdrone.ControlDevice.Parser, new[]{ "ControlDevice_" }, null, new[]{ typeof(global::Pbdrone.ControlDevice.Types.Device) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.Position), global::Pbdrone.Position.Parser, new[]{ "Longitude", "Latitude", "Altitude", "Satellites" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.FlightAnomaly), global::Pbdrone.FlightAnomaly.Parser, new[]{ "Anomaly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbdrone.ACEError), global::Pbdrone.ACEError.Parser, new[]{ "Timestamp", "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Code 0
  /// </summary>
  public sealed partial class Heartbeat : pb::IMessage<Heartbeat> {
    private static readonly pb::MessageParser<Heartbeat> _parser = new pb::MessageParser<Heartbeat>(() => new Heartbeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Heartbeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Heartbeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Heartbeat(Heartbeat other) : this() {
      arrhythmia_ = other.arrhythmia_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Heartbeat Clone() {
      return new Heartbeat(this);
    }

    /// <summary>Field number for the "arrhythmia" field.</summary>
    public const int ArrhythmiaFieldNumber = 1;
    private float arrhythmia_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Arrhythmia {
      get { return arrhythmia_; }
      set {
        arrhythmia_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Heartbeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Heartbeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Arrhythmia, other.Arrhythmia)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Arrhythmia != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Arrhythmia);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Arrhythmia != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Arrhythmia);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Arrhythmia != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Heartbeat other) {
      if (other == null) {
        return;
      }
      if (other.Arrhythmia != 0F) {
        Arrhythmia = other.Arrhythmia;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Arrhythmia = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Code 1
  /// </summary>
  public sealed partial class InterfaceStatus : pb::IMessage<InterfaceStatus> {
    private static readonly pb::MessageParser<InterfaceStatus> _parser = new pb::MessageParser<InterfaceStatus>(() => new InterfaceStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterfaceStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceStatus(InterfaceStatus other) : this() {
      interfaceState_ = other.interfaceState_;
      failureType_ = other.failureType_;
      failureOutput_ = other.failureOutput_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceStatus Clone() {
      return new InterfaceStatus(this);
    }

    /// <summary>Field number for the "interface_state" field.</summary>
    public const int InterfaceStateFieldNumber = 1;
    private global::Pbdrone.InterfaceStatus.Types.State interfaceState_ = global::Pbdrone.InterfaceStatus.Types.State.Offline;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdrone.InterfaceStatus.Types.State InterfaceState {
      get { return interfaceState_; }
      set {
        interfaceState_ = value;
      }
    }

    /// <summary>Field number for the "failure_type" field.</summary>
    public const int FailureTypeFieldNumber = 2;
    private global::Pbdrone.InterfaceStatus.Types.FailState failureType_ = global::Pbdrone.InterfaceStatus.Types.FailState.NoFailure;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdrone.InterfaceStatus.Types.FailState FailureType {
      get { return failureType_; }
      set {
        failureType_ = value;
      }
    }

    /// <summary>Field number for the "failure_output" field.</summary>
    public const int FailureOutputFieldNumber = 3;
    private string failureOutput_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FailureOutput {
      get { return failureOutput_; }
      set {
        failureOutput_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterfaceStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterfaceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InterfaceState != other.InterfaceState) return false;
      if (FailureType != other.FailureType) return false;
      if (FailureOutput != other.FailureOutput) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InterfaceState != global::Pbdrone.InterfaceStatus.Types.State.Offline) hash ^= InterfaceState.GetHashCode();
      if (FailureType != global::Pbdrone.InterfaceStatus.Types.FailState.NoFailure) hash ^= FailureType.GetHashCode();
      if (FailureOutput.Length != 0) hash ^= FailureOutput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InterfaceState != global::Pbdrone.InterfaceStatus.Types.State.Offline) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InterfaceState);
      }
      if (FailureType != global::Pbdrone.InterfaceStatus.Types.FailState.NoFailure) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FailureType);
      }
      if (FailureOutput.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FailureOutput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InterfaceState != global::Pbdrone.InterfaceStatus.Types.State.Offline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InterfaceState);
      }
      if (FailureType != global::Pbdrone.InterfaceStatus.Types.FailState.NoFailure) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FailureType);
      }
      if (FailureOutput.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FailureOutput);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterfaceStatus other) {
      if (other == null) {
        return;
      }
      if (other.InterfaceState != global::Pbdrone.InterfaceStatus.Types.State.Offline) {
        InterfaceState = other.InterfaceState;
      }
      if (other.FailureType != global::Pbdrone.InterfaceStatus.Types.FailState.NoFailure) {
        FailureType = other.FailureType;
      }
      if (other.FailureOutput.Length != 0) {
        FailureOutput = other.FailureOutput;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InterfaceState = (global::Pbdrone.InterfaceStatus.Types.State) input.ReadEnum();
            break;
          }
          case 16: {
            FailureType = (global::Pbdrone.InterfaceStatus.Types.FailState) input.ReadEnum();
            break;
          }
          case 26: {
            FailureOutput = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the InterfaceStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("OFFLINE")] Offline = 0,
        [pbr::OriginalName("ATTEMPTING")] Attempting = 1,
        [pbr::OriginalName("ONLINE")] Online = 2,
      }

      public enum FailState {
        [pbr::OriginalName("NO_FAILURE")] NoFailure = 0,
        [pbr::OriginalName("ATTEMPT_FAILURE")] AttemptFailure = 1,
        [pbr::OriginalName("DROPPED_FAILURE")] DroppedFailure = 2,
        [pbr::OriginalName("THREAD_FAILURE")] ThreadFailure = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Code 2
  /// </summary>
  public sealed partial class FlightStatus : pb::IMessage<FlightStatus> {
    private static readonly pb::MessageParser<FlightStatus> _parser = new pb::MessageParser<FlightStatus>(() => new FlightStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlightStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlightStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlightStatus(FlightStatus other) : this() {
      flightState_ = other.flightState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlightStatus Clone() {
      return new FlightStatus(this);
    }

    /// <summary>Field number for the "flight_state" field.</summary>
    public const int FlightStateFieldNumber = 1;
    private global::Pbdrone.FlightStatus.Types.State flightState_ = global::Pbdrone.FlightStatus.Types.State.Stopped;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdrone.FlightStatus.Types.State FlightState {
      get { return flightState_; }
      set {
        flightState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlightStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlightStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FlightState != other.FlightState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FlightState != global::Pbdrone.FlightStatus.Types.State.Stopped) hash ^= FlightState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FlightState != global::Pbdrone.FlightStatus.Types.State.Stopped) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FlightState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FlightState != global::Pbdrone.FlightStatus.Types.State.Stopped) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlightState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlightStatus other) {
      if (other == null) {
        return;
      }
      if (other.FlightState != global::Pbdrone.FlightStatus.Types.State.Stopped) {
        FlightState = other.FlightState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FlightState = (global::Pbdrone.FlightStatus.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FlightStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("STOPPED")] Stopped = 0,
        [pbr::OriginalName("ON_GROUND")] OnGround = 1,
        [pbr::OriginalName("IN_AIR")] InAir = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Code 3
  /// </summary>
  public sealed partial class ControlDevice : pb::IMessage<ControlDevice> {
    private static readonly pb::MessageParser<ControlDevice> _parser = new pb::MessageParser<ControlDevice>(() => new ControlDevice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ControlDevice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlDevice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlDevice(ControlDevice other) : this() {
      controlDevice_ = other.controlDevice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlDevice Clone() {
      return new ControlDevice(this);
    }

    /// <summary>Field number for the "control_device" field.</summary>
    public const int ControlDevice_FieldNumber = 1;
    private global::Pbdrone.ControlDevice.Types.Device controlDevice_ = global::Pbdrone.ControlDevice.Types.Device.Rc;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdrone.ControlDevice.Types.Device ControlDevice_ {
      get { return controlDevice_; }
      set {
        controlDevice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ControlDevice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ControlDevice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlDevice_ != other.ControlDevice_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlDevice_ != global::Pbdrone.ControlDevice.Types.Device.Rc) hash ^= ControlDevice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlDevice_ != global::Pbdrone.ControlDevice.Types.Device.Rc) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ControlDevice_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlDevice_ != global::Pbdrone.ControlDevice.Types.Device.Rc) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ControlDevice_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ControlDevice other) {
      if (other == null) {
        return;
      }
      if (other.ControlDevice_ != global::Pbdrone.ControlDevice.Types.Device.Rc) {
        ControlDevice_ = other.ControlDevice_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ControlDevice_ = (global::Pbdrone.ControlDevice.Types.Device) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ControlDevice message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Device {
        [pbr::OriginalName("RC")] Rc = 0,
        [pbr::OriginalName("MSDK")] Msdk = 1,
        [pbr::OriginalName("OSDK")] Osdk = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Code 4
  /// </summary>
  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      longitude_ = other.longitude_;
      latitude_ = other.latitude_;
      altitude_ = other.altitude_;
      satellites_ = other.satellites_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 1;
    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private float latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "altitude" field.</summary>
    public const int AltitudeFieldNumber = 3;
    private float altitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    /// <summary>Field number for the "satellites" field.</summary>
    public const int SatellitesFieldNumber = 4;
    private int satellites_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Satellites {
      get { return satellites_; }
      set {
        satellites_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Altitude, other.Altitude)) return false;
      if (Satellites != other.Satellites) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
      if (Altitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Altitude);
      if (Satellites != 0) hash ^= Satellites.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Longitude != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Longitude);
      }
      if (Latitude != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Latitude);
      }
      if (Altitude != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Altitude);
      }
      if (Satellites != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Satellites);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Longitude != 0F) {
        size += 1 + 4;
      }
      if (Latitude != 0F) {
        size += 1 + 4;
      }
      if (Altitude != 0F) {
        size += 1 + 4;
      }
      if (Satellites != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Satellites);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Longitude != 0F) {
        Longitude = other.Longitude;
      }
      if (other.Latitude != 0F) {
        Latitude = other.Latitude;
      }
      if (other.Altitude != 0F) {
        Altitude = other.Altitude;
      }
      if (other.Satellites != 0) {
        Satellites = other.Satellites;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Longitude = input.ReadFloat();
            break;
          }
          case 21: {
            Latitude = input.ReadFloat();
            break;
          }
          case 29: {
            Altitude = input.ReadFloat();
            break;
          }
          case 32: {
            Satellites = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Code 5
  /// </summary>
  public sealed partial class FlightAnomaly : pb::IMessage<FlightAnomaly> {
    private static readonly pb::MessageParser<FlightAnomaly> _parser = new pb::MessageParser<FlightAnomaly>(() => new FlightAnomaly());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlightAnomaly> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlightAnomaly() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlightAnomaly(FlightAnomaly other) : this() {
      anomaly_ = other.anomaly_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlightAnomaly Clone() {
      return new FlightAnomaly(this);
    }

    /// <summary>Field number for the "anomaly" field.</summary>
    public const int AnomalyFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_anomaly_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> anomaly_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Anomaly {
      get { return anomaly_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlightAnomaly);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlightAnomaly other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!anomaly_.Equals(other.anomaly_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= anomaly_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      anomaly_.WriteTo(output, _repeated_anomaly_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += anomaly_.CalculateSize(_repeated_anomaly_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlightAnomaly other) {
      if (other == null) {
        return;
      }
      anomaly_.Add(other.anomaly_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            anomaly_.AddEntriesFrom(input, _repeated_anomaly_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Code 6
  /// </summary>
  public sealed partial class ACEError : pb::IMessage<ACEError> {
    private static readonly pb::MessageParser<ACEError> _parser = new pb::MessageParser<ACEError>(() => new ACEError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ACEError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbdrone.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ACEError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ACEError(ACEError other) : this() {
      timestamp_ = other.timestamp_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ACEError Clone() {
      return new ACEError(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ACEError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ACEError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Timestamp);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ACEError other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Timestamp = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
